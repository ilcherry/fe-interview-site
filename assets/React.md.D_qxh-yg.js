import{_ as a,c as t,o as r,ae as i}from"./chunks/framework.DRC4R4Ij.js";const o="/fe-interview-site/assets/react_lifecycle.ndP_TnG-.png",R=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"React.md","filePath":"React.md"}'),l={name:"React.md"};function c(d,e,n,s,u,h){return r(),t("div",null,e[0]||(e[0]=[i('<h2 id="什么是-virtual-dom" tabindex="-1">什么是 Virtual DOM? <a class="header-anchor" href="#什么是-virtual-dom" aria-label="Permalink to &quot;什么是 Virtual DOM?&quot;">​</a></h2><h2 id="react-组件之间如何通信" tabindex="-1">React 组件之间如何通信？ <a class="header-anchor" href="#react-组件之间如何通信" aria-label="Permalink to &quot;React 组件之间如何通信？&quot;">​</a></h2><ul><li>父组件通过 props 向子组件传递状态</li><li>子组件通过回调方法更新父组件的状态</li><li>兄弟组件通过状态提升到最近的共同父组件或者状态管理工具通信</li></ul><h2 id="详解-react-hooks-的生命周期" tabindex="-1">详解 React Hooks 的生命周期 <a class="header-anchor" href="#详解-react-hooks-的生命周期" aria-label="Permalink to &quot;详解 React Hooks 的生命周期&quot;">​</a></h2><p><img src="'+o+'" alt="React Lifecycle"></p><h2 id="react-的重渲染" tabindex="-1">React 的重渲染 <a class="header-anchor" href="#react-的重渲染" aria-label="Permalink to &quot;React 的重渲染&quot;">​</a></h2><ol><li>组件的 state 变化</li><li>父组件重渲染导致子组件也重渲染</li><li>组件接收到新的 props</li><li>context 变化导致所有消费组件重渲染</li></ol><h2 id="为什么-react-渲染列表时需要加上-key" tabindex="-1">为什么 React 渲染列表时需要加上 key？ <a class="header-anchor" href="#为什么-react-渲染列表时需要加上-key" aria-label="Permalink to &quot;为什么 React 渲染列表时需要加上 key？&quot;">​</a></h2><p>在 React 渲染列表时，需要为每个列表项添加 key，其主要原因是 提升性能并减少不必要的 DOM 操作</p><h2 id="如何理解-fiber-架构" tabindex="-1">如何理解 Fiber 架构 <a class="header-anchor" href="#如何理解-fiber-架构" aria-label="Permalink to &quot;如何理解 Fiber 架构&quot;">​</a></h2><h2 id="redux-的原理-react-redux-的原理" tabindex="-1">Redux 的原理&amp;React-Redux 的原理 <a class="header-anchor" href="#redux-的原理-react-redux-的原理" aria-label="Permalink to &quot;Redux 的原理&amp;React-Redux 的原理&quot;">​</a></h2><p>Redux 的原理是发布订阅模式，React-Redux 的原理是 React.Context+useContext</p><h2 id="vue2-与-vue3-的双向绑定原理" tabindex="-1">vue2 与 vue3 的双向绑定原理 <a class="header-anchor" href="#vue2-与-vue3-的双向绑定原理" aria-label="Permalink to &quot;vue2 与 vue3 的双向绑定原理&quot;">​</a></h2>',13)]))}const _=a(l,[["render",c]]);export{R as __pageData,_ as default};
